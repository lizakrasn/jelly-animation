{"version":3,"sources":["js/mouse.js","js/ball.js","js/index.js"],"names":["Mouse","canvas","x","y","rect","getBoundingClientRect","onmousemove","e","clientX","left","clientY","top","Ball","radius","color","originalX","originalY","vx","vy","friction","springFactor","mouse","dx","dy","dist","Math","sqrt","angle","atan2","tx","cos","ty","sin","dx1","dy1","ctx","save","beginPath","arc","PI","fillStyle","fill","closePath","restore","document","getElementById","getContext","pos","balls","i","push","ConnectDots","moveTo","forEach","ball","lineTo","ConnectDots1","dots","jlen","length","p0","p1","quadraticCurveTo","Render","window","requestAnimationFrame","clearRect","setPos","draw","think"],"mappings":";AAUG,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAVkBA,IAAAA,EACnB,SAAYC,EAAAA,GAAQ,IAAA,EAAA,KAAA,EAAA,KAAA,GACbC,KAAAA,EAAI,EACJC,KAAAA,EAAI,EACLC,IAAAA,EAAOH,EAAOI,wBAElBJ,EAAOK,YAAc,SAAAC,GACnB,EAAKL,EAAIK,EAAEC,QAAUJ,EAAKK,KAC1B,EAAKN,EAAII,EAAEG,QAAUN,EAAKO,MAE7B,QAAA,QAAA;;ACiDA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA3DkBC,IAAAA,EAAAA,WACPV,SAAAA,EAAAA,EAAGC,EAAGU,EAAQC,GAAO,EAAA,KAAA,GAC5BZ,KAAAA,EAAIA,GAAK,EACTC,KAAAA,EAAIA,GAAK,EAEPY,KAAAA,UAAYb,GAAK,EACjBc,KAAAA,UAAYb,GAAK,EACjBc,KAAAA,GAAK,EACLC,KAAAA,GAAK,EACPL,KAAAA,OAASA,GAAU,EACnBC,KAAAA,MAAQA,GAAS,UACfK,KAAAA,SAAW,GACXC,KAAAA,aAAe,GA+CrB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SA5CD,MAAA,SAAOlB,EAAEC,GACFD,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,IA0CV,CAAA,IAAA,QAvCD,MAAA,SAAMkB,GACAC,IAAAA,EAAK,KAAKpB,EAAImB,EAAMnB,EACpBqB,EAAK,KAAKpB,EAAIkB,EAAMlB,EAIrBqB,GAFQC,KAAKC,KAAKJ,EAAGA,EAAKC,EAAGA,GAEtB,GAAI,CACRI,IAAAA,EAAQF,KAAKG,MAAML,EAAGD,GACtBO,EAAKR,EAAMnB,EAAsB,GAAlBuB,KAAKK,IAAIH,GACxBI,EAAKV,EAAMlB,EAAsB,GAAlBsB,KAAKO,IAAIL,GAEvBV,KAAAA,IAAMY,EAAK,KAAK3B,EAChBgB,KAAAA,IAAMa,EAAK,KAAK5B,EAInB8B,IAAAA,IAAQ,KAAK/B,EAAI,KAAKa,WACtBmB,IAAQ,KAAK/B,EAAI,KAAKa,WAErBC,KAAAA,IAAMgB,EAAM,KAAKb,aACjBF,KAAAA,IAAMgB,EAAM,KAAKd,aAGjBH,KAAAA,IAAM,KAAKE,SACXD,KAAAA,IAAM,KAAKC,SAGXjB,KAAAA,GAAK,KAAKe,GACVd,KAAAA,GAAK,KAAKe,KAWhB,CAAA,IAAA,OARD,MAAA,SAAKiB,GACDA,EAAIC,OACJD,EAAIE,YACJF,EAAIG,IAAI,KAAKpC,EAAG,KAAKC,EAAG,KAAKU,OAAQ,EAAE,EAAIY,KAAKc,IAChDJ,EAAIK,UAAY,KAAK1B,MACrBqB,EAAIM,OACJN,EAAIO,YACJP,EAAIQ,cACP,EA3DkB/B,GA2DlB,QAAA,QAAA;;ACDG,aA1DN,IAAA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,cAyDM,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhDN,IAPA,IAAIX,EAAS2C,SAASC,eAAe,YACjCV,EAAMlC,EAAO6C,WAAW,MACxBC,EAAM,IAAI/C,EAAJ,QAAUC,GAChB+C,EAAQ,GAER3B,EAAQ,IAAIT,EAAJ,QAAS,EAAG,EAAG,GAAI,UAEtBqC,EAAI,EAAGA,EAAI,GAAIA,IACvBD,EAAME,KACL,IAAItC,EAAJ,QACC,IAAM,IAAMa,KAAKK,IAAQ,EAAJmB,EAAQxB,KAAKc,GAAK,IACvC,IAAM,IAAMd,KAAKO,IAAQ,EAAJiB,EAAQxB,KAAKc,GAAK,MAK1C,SAASY,EAAYH,GACpBb,EAAIE,YACJF,EAAIiB,OAAOJ,EAAM,GAAG9C,EAAG8C,EAAM,GAAG7C,GAChC6C,EAAMK,QAAQ,SAAAC,GACbnB,EAAIoB,OAAOD,EAAKpD,EAAGoD,EAAKnD,KAGzBgC,EAAIO,YACDP,EAAIM,OAGR,SAASe,EAAaC,GACrBtB,EAAIE,YAEC,IAAA,IAAIY,EAAI,EAAGS,EAAOD,EAAKE,OAAQV,GAAKS,IAAQT,EAAG,CAC/CW,IAAAA,EAAKH,EAAKR,EAAI,GAAKS,EAAOT,EAAI,EAAIS,EAAOT,EAAI,GAC7CY,EAAKJ,EAAKR,EAAI,GAAKS,EAAOT,EAAI,EAAIS,EAAOT,EAAI,GACjDd,EAAI2B,iBAAiBF,EAAG1D,EAAG0D,EAAGzD,EAAmB,IAAfyD,EAAG1D,EAAI2D,EAAG3D,GAA0B,IAAf0D,EAAGzD,EAAI0D,EAAG1D,IAGlEgC,EAAIO,YACHP,EAAIK,UAAY,YACjBL,EAAIM,OAGL,SAASsB,IACRC,OAAOC,sBAAsBF,GAC7B5B,EAAI+B,UAAU,EAAG,EAAG,IAAK,KAEzB7C,EAAM8C,OAAOpB,EAAI7C,EAAG6C,EAAI5C,GACxBkB,EAAM+C,KAAKjC,GAEXa,EAAMK,QAAQ,SAAAC,GACbA,EAAKe,MAAMtB,KAGTS,EAAaR,GAGjBe","file":"js.9f6356be.js","sourceRoot":"..\\src","sourcesContent":["export default class Mouse {\r\n  constructor(canvas) {\r\n    this.x = 0;\r\n    this.y = 0;\r\n    var rect = canvas.getBoundingClientRect();\r\n\r\n    canvas.onmousemove = e => {\r\n      this.x = e.clientX - rect.left;\r\n      this.y = e.clientY - rect.top;\r\n    };\r\n  }\r\n}","export default class Ball{\r\n  constructor(x, y, radius, color) {\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\r\n    this.originalX = x || 0;\r\n    this.originalY = y || 0;\r\n    this.vx = 0;\r\n    this.vy = 0;\r\n\t\tthis.radius = radius || 2;\r\n\t\tthis.color = color || \"#ff6600\";\r\n    this.friction = 0.7;\r\n    this.springFactor = 0.3;\r\n  }\r\n\r\n  setPos(x,y){\r\n    this.x = x;\r\n    this.y = y;\r\n}\r\n\r\n  think(mouse) {\r\n    let dx = this.x - mouse.x;\r\n    let dy = this.y - mouse.y;\r\n\r\n    let dist = Math.sqrt(dx*dx + dy*dy)\r\n    //interection\r\n    if(dist < 30) {\r\n      let angle = Math.atan2(dy,dx);\r\n      let tx = mouse.x + Math.cos(angle) * 50;\r\n      let ty = mouse.y + Math.sin(angle) * 50;\r\n\r\n      this.vx += tx - this.x;\r\n      this.vy += ty - this.y;\r\n    }\r\n\r\n    //spring back\r\n    let dx1 = -(this.x - this.originalX);\r\n    let dy1 = -(this.y - this.originalY);\r\n\r\n    this.vx += dx1 * this.springFactor;\r\n    this.vy += dy1 * this.springFactor;\r\n\r\n    //friction\r\n    this.vx *= this.friction\r\n    this.vy *= this.friction\r\n\r\n    //actual move\r\n    this.x += this.vx;\r\n    this.y += this.vy;\r\n  }\r\n\r\n  draw(ctx) {\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      ctx.arc(this.x, this.y, this.radius, 0,2 * Math.PI);\r\n      ctx.fillStyle = this.color\r\n      ctx.fill();\r\n      ctx.closePath();\r\n      ctx.restore();\r\n  }\r\n}","import Mouse from './mouse.js'\r\nimport Ball from './ball.js'\r\n\r\nlet canvas = document.getElementById(\"drawOnMe\");\r\nlet ctx = canvas.getContext(\"2d\");\r\nlet pos = new Mouse(canvas);\r\nlet balls = [];\r\n\r\nlet mouse = new Ball(0, 0, 30, \"yellow\");\r\n\r\nfor (var i = 0; i < 50; i++) {\r\n\tballs.push(\r\n\t\tnew Ball(\r\n\t\t\t200 + 100 * Math.cos(i * 2 * Math.PI / 50),\r\n\t\t\t200 + 100 * Math.sin(i * 2 * Math.PI / 50)\r\n\t\t)\r\n\t);\r\n}\r\n\r\nfunction ConnectDots(balls) {\r\n\tctx.beginPath();\r\n\tctx.moveTo(balls[0].x, balls[0].y);\r\n\tballs.forEach(ball => {\r\n\t\tctx.lineTo(ball.x, ball.y);\r\n\t});\r\n\r\n\tctx.closePath();\r\n    ctx.fill();\r\n}\r\n\r\nfunction ConnectDots1(dots) {\r\n\tctx.beginPath();\r\n\r\n\tfor (var i = 0, jlen = dots.length; i <= jlen; ++i) {\r\n\t\tvar p0 = dots[i + 0 >= jlen ? i + 0 - jlen : i + 0];\r\n\t\tvar p1 = dots[i + 1 >= jlen ? i + 1 - jlen : i + 1];\r\n\t\tctx.quadraticCurveTo(p0.x, p0.y, (p0.x + p1.x) * 0.5, (p0.y + p1.y) * 0.5);\r\n\t}\r\n\r\n\tctx.closePath();\r\n  ctx.fillStyle = 'lightblue'\r\n\tctx.fill();\r\n}\r\n\r\nfunction Render() {\r\n\twindow.requestAnimationFrame(Render);\r\n\tctx.clearRect(0, 0, 600, 600);\r\n\r\n\tmouse.setPos(pos.x, pos.y);\r\n\tmouse.draw(ctx);\r\n\r\n\tballs.forEach(ball => {\r\n\t\tball.think(pos);\r\n\t\t// ball.draw(ctx);\r\n\t});\r\n    ConnectDots1(balls);\r\n}\r\n\r\nRender();\r\n"]}